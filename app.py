# app.py
import os
import logging
import handlers.nagual_journey as nagual_journey
import handlers.tests as tests
import handlers.admin as admin
import asyncio  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å—é

# –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO  # –ú–µ–Ω—è–π—Ç–µ –Ω–∞ DEBUG –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ
)

from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, filters
from config.settings import settings
import handlers.common as common
import handlers.feedback as feedback
from handlers.admin import admin_show_unanswered, handle_admin_reply_command
from database import init_db  # ‚Üê –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î

logger = logging.getLogger(__name__)


def setup_handlers(app):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±–æ—Ç–∞"""
    # 1. –°–∞–º—ã–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã ‚Äî –≤ –Ω–∞—á–∞–ª–æ
    app.add_handler(CallbackQueryHandler(tests.handle_answer, pattern="^answer_"))          # answer_0_1
    app.add_handler(CallbackQueryHandler(tests.handle_test_action, pattern="^test_"))       # test_soul_type
    app.add_handler(CallbackQueryHandler(tests.handle_category_action, pattern="^category_"))  # category_esoteric
    app.add_handler(CallbackQueryHandler(tests.handle_main_menu_action, pattern="^(show_categories|to_main)$"))
    app.add_handler(CallbackQueryHandler(common.handle_author_message, pattern="^ask_author$"))
    app.add_handler(CallbackQueryHandler(admin_show_unanswered, pattern="^admin_unanswered$"))
    app.add_handler(CallbackQueryHandler(nagual_journey.start_nagual_journey, pattern="^nagual_intro$"))
    app.add_handler(CallbackQueryHandler(nagual_journey.handle_nagual_action, pattern="^nagual:"))
    app.add_handler(CallbackQueryHandler(admin_show_unanswered, pattern="^admin_unanswered$"))
    app.add_handler(CallbackQueryHandler(admin.show_stats, pattern="^admin_stats$"))  # ‚Üê –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É
    app.add_handler(CallbackQueryHandler(nagual_journey.start_nagual_journey, pattern="^nagual_intro$"))
    
    # 2. –ö–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", common.start))

    # 3. –°–æ–æ–±—â–µ–Ω–∏—è
    app.add_handler(MessageHandler(
        filters.COMMAND & filters.User(user_id=settings.ADMIN_ID),
        handle_admin_reply_command
    ))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, common.handle_message))


async def setup_webhook(app):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞"""
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
    port = int(os.environ.get('PORT', '10000'))
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ–º–µ–Ω Render
    # RENDER_EXTERNAL_HOSTNAME –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è Render –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
    domain = os.environ.get('RENDER_EXTERNAL_HOSTNAME', 'perspective-bot.onrender.com')
    
    # URL –¥–ª—è –≤–µ–±—Ö—É–∫–∞
    webhook_url = f"https://{domain}/webhook"
    
    logger.info(f"üåç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤–µ–±—Ö—É–∫: {webhook_url}")
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –≤–µ–±—Ö—É–∫ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    await app.bot.delete_webhook(drop_pending_updates=True)
    
    return {
        'listen': "0.0.0.0",
        'port': port,
        'webhook_url': webhook_url,
        'secret_token': os.environ.get('WEBHOOK_SECRET', 'YOUR_SECRET_TOKEN'),
        'allowed_updates': ["message", "callback_query"]
    }


async def main():
    try:
        # ‚úÖ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–• ‚Äî –°–ê–ú–ê–Ø –ü–ï–†–í–ê–Ø –û–ü–ï–†–ê–¶–ò–Ø
        init_db()

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app = ApplicationBuilder() \
            .token(settings.BOT_TOKEN) \
            .connect_timeout(30) \
            .read_timeout(30) \
            .pool_timeout(30) \
            .build()

        setup_handlers(app)
        logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
        webhook_settings = await setup_webhook(app)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±—Ö—É–∫
        await app.run_webhook(**webhook_settings)
        
    except Exception as e:
        logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}", exc_info=True)


if __name__ == "__main__":
    logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã.")
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é main()
    asyncio.run(main())

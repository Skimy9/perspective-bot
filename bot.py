import os
import json
import logging
from flask import Flask, request
import telebot
from telebot import types

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ.get('BOT_TOKEN')
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN environment variable is not set")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MESSAGE = """
üåå *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–≤–∞–Ω—Ç–æ–≤—ã–π –ö–æ–º–ø–∞—Å*

–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤–æ–ø—Ä–æ—Å—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –æ—Å–æ–∑–Ω–∞–Ω–∏—é –≤–∞—à–∏—Ö —Å–∫—Ä—ã—Ç—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤.

–í—ã –Ω–µ –æ–¥–∏–Ω–æ–∫–∏ –≤ —Å–≤–æ–∏—Ö –ø–æ–∏—Å–∫–∞—Ö. –ó–¥–µ—Å—å –≤–∞—Å –ø–æ–Ω–∏–º–∞—é—Ç, –∑–¥–µ—Å—å –≤–∞—Å –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ç–∞–∫–∏–º, –∫–∞–∫–æ–π –≤—ã –µ—Å—Ç—å.

–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∫ –Ω–æ–≤–æ–º—É –ø–æ–Ω–∏–º–∞–Ω–∏—é —Å–µ–±—è.

‚ö†Ô∏è *–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å*
–ö–≤–∞–Ω—Ç–æ–≤—ã–π –ö–æ–º–ø–∞—Å ‚Äî —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–∞–º–æ—Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ –∏ –ª–∏—á–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞, –∞ –Ω–µ –∑–∞–º–µ–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ —è–≤–ª—è—é—Ç—Å—è –¥–∏–∞–≥–Ω–æ–∑–æ–º. –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–∂–∏–≤–∞–µ—Ç–µ —Å–µ—Ä—å–µ–∑–Ω—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.
"""

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    bot.reply_to(
        message, 
        WELCOME_MESSAGE,
        parse_mode='Markdown'
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
    btn2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–≤—Ç–æ—Ä—É")
    markup.add(btn1, btn2)
    
    bot.send_message(
        message.chat.id,
        "–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏?",
        reply_markup=markup
    )

# –û–°–ù–û–í–ù–ê–Ø –ü–†–ê–í–ö–ê: –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ /myid
@bot.message_handler(commands=['myid'])
def get_my_id(message):
    logger.info(f"!!! –û–ë–†–ê–ë–û–¢–ß–ò–ö /myid –í–´–ó–í–ê–ù –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {message.chat.id} !!!")
    
    try:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–≤–æ–π ID")
        
        bot.reply_to(
            message,
            f"–í–∞—à Telegram ID: `{message.chat.id}`\n\n"
            "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ —á–∏—Å–ª–æ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª –∫–∞–∫ ADMIN_ID, "
            "–µ—Å–ª–∏ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º —ç—Ç–æ–≥–æ –±–æ—Ç–∞.",
            parse_mode='Markdown'
        )
        logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —Å ID —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /myid: {str(e)}")
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"
@bot.message_handler(func=lambda message: message.text == "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞")
def start_work(message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É")
    
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
    bot.reply_to(
        message,
        "‚ú® *–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã*\n\n"
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ä–µ—à–∏–ª–∏ –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!\n\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–π—Ç–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤, "
        "—á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é –∏ –¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ /test, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è.",
        parse_mode='Markdown'
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–≤—Ç–æ—Ä—É"
@bot.message_handler(func=lambda message: message.text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–≤—Ç–æ—Ä—É")
def ask_question(message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} —Ö–æ—á–µ—Ç –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–≤—Ç–æ—Ä—É")
    
    bot.reply_to(
        message,
        "‚úçÔ∏è *–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å*\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –æ–Ω–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ—Ä—É –±–æ—Ç–∞. "
        "–ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
        parse_mode='Markdown'
    )

# –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–ê–í–ö–ê: –ò–∑–º–µ–Ω–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
# –¢–µ–ø–µ—Ä—å –æ–Ω –ù–ï –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(func=lambda message: not message.text.startswith('/'))
def echo_all(message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}")
    
    # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞, –ø—Ä–æ—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.reply_to(
        message, 
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –±–æ—Ç–∞. "
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã."
    )

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–µ–±—Ö—É–∫–æ–≤
app = Flask(__name__)

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤–µ–±—Ö—É–∫–æ–≤
@app.route('/' + BOT_TOKEN, methods=['POST'])
def get_message():
    logger.info("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç Telegram")
    try:
        bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
        logger.info("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        return "!", 200
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–∞: {str(e)}")
        return "Error", 500

# –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–ê–í–ö–ê: –û—Ç–¥–µ–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞
@app.route("/setup_webhook", methods=['GET'])
def setup_webhook():
    logger.info("–ó–∞–ø—Ä–æ—à–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞")
    
    # –£–î–ê–õ–Ø–ï–ú –°–£–©–ï–°–¢–í–£–Æ–©–ò–ô –í–ï–ë–•–£–ö
    bot.remove_webhook()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –≤–µ–±—Ö—É–∫–∞
    service_url = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
    if service_url:
        webhook_url = f"https://{service_url}/{BOT_TOKEN}"
    else:
        # –ó–ê–ú–ï–ù–ò–¢–ï 'quantum-compass' –ù–ê –ò–ú–Ø –í–ê–®–ï–ì–û –°–ï–†–í–ò–°–ê –í RENDER
        webhook_url = f"https://quantum-compass.onrender.com/{BOT_TOKEN}"
    
    logger.info(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫: {webhook_url}")
    result = bot.set_webhook(url=webhook_url)
    
    if result:
        return f"Webhook setup complete to {webhook_url}", 200
    else:
        return "Webhook setup failed", 500

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    port = int(os.environ.get('PORT', 10000))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –Ω–∞ 0.0.0.0
    app.run(host="0.0.0.0", port=port)

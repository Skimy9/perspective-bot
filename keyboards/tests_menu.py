# tests_menu.py
from telegram import InlineKeyboardButton, InlineKeyboardMarkup


def get_feedback_keyboard(user_id=None):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""
    buttons = []
    if user_id:
        buttons.append([InlineKeyboardButton("‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"reply_to_{user_id}")])
    buttons.append([InlineKeyboardButton("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_main")])
    return InlineKeyboardMarkup(buttons)


def _add_main_menu_button(buttons):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    if not any("to_main" in btn.callback_data for row in buttons for btn in row):
        buttons.append([InlineKeyboardButton("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_main")])
    return buttons



def get_main_inline_keyboard(is_admin=False):
    buttons = [
        [InlineKeyboardButton("üß† –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—ã", callback_data="show_categories")],
        [InlineKeyboardButton("üåÄ –ü—É—Ç—å –∫ –°–∫—Ä—ã—Ç–æ–º—É", callback_data="nagual_intro")],
        [InlineKeyboardButton("‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –∞–≤—Ç–æ—Ä—É", callback_data="ask_author")]
    ]

    if is_admin:
        buttons.append([
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")
        ])
        buttons.append([
            InlineKeyboardButton("üì¨ –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è", callback_data="admin_unanswered")
        ])

    return InlineKeyboardMarkup(buttons)


def get_categories_keyboard():
    """–ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    categories = {
        "esoteric": "üîÆ –≠–∑–æ—Ç–µ—Ä–∏–∫–∞",
        "psychology": "üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è",
        "personality": "üåü –õ–∏—á–Ω–æ—Å—Ç—å"
    }
    buttons = [
        [InlineKeyboardButton(name, callback_data=f"category_{cat_id}")]
        for cat_id, name in categories.items()
    ]
    return InlineKeyboardMarkup(_add_main_menu_button(buttons))


def get_tests_keyboard(category_id):
    """–ú–µ–Ω—é —Ç–µ—Å—Ç–æ–≤"""
    tests = {
        "esoteric": {
            "soul_type": "üîÆ –¢–∏–ø –≤–∞—à–µ–π –¥—É—à–∏",
            "elemental": "üå™Ô∏è –í–∞—à–∏ —Å—Ç–∏—Ö–∏–∏",
            "ayurvedic": "üåø –ê—é—Ä–≤–µ–¥–∏—á–µ—Å–∫–∞—è –¥–æ—à–∞",
            "magic_path": "üåå –ü—É—Ç—å –º–∞–≥–∏–∏"
        },
        "psychology": {
            "depression": "üìâ –¢–µ—Å—Ç –Ω–∞ –¥–µ–ø—Ä–µ—Å—Å–∏—é",
            "anxiety": "üåÄ –¢–µ—Å—Ç –Ω–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å",
            "stress": "üí¢ –¢–µ—Å—Ç –Ω–∞ —Å—Ç—Ä–µ—Å—Å"
        },
        "personality": {
            "bigfive": "üåü –¢–µ—Å—Ç –ª–∏—á–Ω–æ—Å—Ç–∏ Big5",
            "mbti": "üîç –¢–µ—Å—Ç –ª–∏—á–Ω–æ—Å—Ç–∏ (MBTI)"
        },
    }
    buttons = [
        [InlineKeyboardButton(name, callback_data=f"test_{test_id}")]
        for test_id, name in tests.get(category_id, {}).items()
    ]
    return InlineKeyboardMarkup(_add_main_menu_button(buttons))


def get_question_keyboard(test, question_num):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞ (–ë–ï–ó –≤—Ä–µ–º–µ–Ω–∏ –≤ callback_data)"""
    buttons = [
        [InlineKeyboardButton(option, callback_data=f"answer_{question_num}_{i}")]
        for i, option in enumerate(test.options[question_num])
    ]
    return InlineKeyboardMarkup(_add_main_menu_button(buttons))


def get_post_test_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞"""
    buttons = [
        [InlineKeyboardButton("üß† –ü—Ä–æ–π—Ç–∏ –¥—Ä—É–≥–æ–π —Ç–µ—Å—Ç", callback_data="show_categories")],
    ]
    return InlineKeyboardMarkup(_add_main_menu_button(buttons))